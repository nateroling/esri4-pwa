"use strict";var Zt=Object.defineProperty,st=Object.getOwnPropertySymbols,Kt=Object.prototype.hasOwnProperty,Et=Object.prototype.propertyIsEnumerable,it=(K,R,f)=>R in K?Zt(K,R,{enumerable:!0,configurable:!0,writable:!0,value:f}):K[R]=f,Ee=(K,R)=>{for(var f in R||(R={}))Kt.call(R,f)&&it(K,f,R[f]);if(st)for(var f of st(R))Et.call(R,f)&&it(K,f,R[f]);return K};(self.webpackChunkesri4_pwa=self.webpackChunkesri4_pwa||[]).push([[8773],{14658:(K,R,f)=>{function P(){return new Float32Array(3)}function j(x,G,g){const y=new Float32Array(3);return y[0]=x,y[1]=G,y[2]=g,y}function $(){return P()}function k(){return j(1,1,1)}function S(){return j(1,0,0)}function _(){return j(0,1,0)}function w(){return j(0,0,1)}f.d(R,{c:()=>P,f:()=>j});const Z=$(),be=k(),q=S(),ce=_(),F=w();Object.freeze({__proto__:null,create:P,clone:function T(x){const G=new Float32Array(3);return G[0]=x[0],G[1]=x[1],G[2]=x[2],G},fromValues:j,createView:function he(x,G){return new Float32Array(x,G,3)},zeros:$,ones:k,unitX:S,unitY:_,unitZ:w,ZEROS:Z,ONES:be,UNIT_X:q,UNIT_Y:ce,UNIT_Z:F})},55051:(K,R,f)=>{f.d(R,{Z:()=>x});var P=f(30994),T=f(30217),j=f(49966),he=f(9545),$=f(14658),k=f(13924),S=f(57477),_=f(64288),w=f(83994),Z=f(67969),be=f(49353);const q=Math.PI/180;class F extends S.s{constructor(g){super(),this._dvsMat3=(0,j.c)(),this._localOrigin={x:0,y:0},this._getBounds=g}destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(g){const{context:y}=g,b=this._getBounds();if(b.length<1)return;this._createShaderProgram(y),this._updateMatricesAndLocalOrigin(g),this._updateBufferData(y,b),y.setBlendingEnabled(!0),y.setDepthTestEnabled(!1),y.setStencilWriteMask(0),y.setStencilTestEnabled(!1),y.setBlendFunction(Z.zi.ONE,Z.zi.ONE_MINUS_SRC_ALPHA),y.setColorMask(!0,!0,!0,!0);const V=this._program;y.bindVAO(this._vao),y.useProgram(V),V.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),y.gl.lineWidth(1),y.drawElements(Z.MX.LINES,8*b.length,Z.g.UNSIGNED_INT,0),y.bindVAO()}_createTransforms(){return{dvs:(0,j.c)()}}_createShaderProgram(g){this._program||(this._program=g.programCache.acquire("precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",ue().attributes))}_updateMatricesAndLocalOrigin(g){const{state:y}=g,{displayMat3:b,size:V,resolution:ee,pixelRatio:A,rotation:z,viewpoint:B}=y,U=q*z,{x:I,y:te}=B.targetGeometry,Ue=(0,k.or)(I,y.spatialReference);this._localOrigin.x=Ue,this._localOrigin.y=te;const De=A*V[0],se=A*V[1],fe=ee*De,me=ee*se,E=(0,T.b)(this._dvsMat3);(0,T.m)(E,E,b),(0,T.c)(E,E,(0,he.f)(De/2,se/2)),(0,T.d)(E,E,(0,$.f)(V[0]/fe,-se/me,1)),(0,T.r)(E,E,-U)}_updateBufferData(g,y){const{x:b,y:V}=this._localOrigin,A=new Float32Array(8*y.length),z=new Uint32Array(8*y.length);let B=0,U=0;for(const I of y)I&&(A[2*B+0]=I[0]-b,A[2*B+1]=I[1]-V,A[2*B+2]=I[0]-b,A[2*B+3]=I[3]-V,A[2*B+4]=I[2]-b,A[2*B+5]=I[3]-V,A[2*B+6]=I[2]-b,A[2*B+7]=I[1]-V,z[U+0]=B+0,z[U+1]=B+3,z[U+2]=B+3,z[U+3]=B+2,z[U+4]=B+2,z[U+5]=B+1,z[U+6]=B+1,z[U+7]=B+0,B+=4,U+=8);if(this._vertexBuffer?this._vertexBuffer.setData(A.buffer):this._vertexBuffer=w.f.createVertex(g,Z.l1.DYNAMIC_DRAW,A.buffer),this._indexBuffer?this._indexBuffer.setData(z):this._indexBuffer=w.f.createIndex(g,Z.l1.DYNAMIC_DRAW,z),!this._vao){const I=ue();this._vao=new be.U(g,I.attributes,I.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const ue=()=>(0,_.cM)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:Z.g.FLOAT}]});class x extends P.T{constructor(g){super(g),this.hasHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(g){this._boundsRenderer=new F(g),this.requestRender()}get hasLabels(){return!1}onTileData(g,y){g.patch(y),this.contains(g)||this.addChild(g),this.requestRender()}onTileError(g){g.clear(),this.contains(g)||this.addChild(g)}_renderChildren(g,y){for(const b of this.children)b.isReady&&b.hasData&&(b.commit(g),g.context.setStencilFunction(Z.wb.EQUAL,b.stencilRef,255),b._displayList.replay(g,b,y))}}},97291:(K,R,f)=>{f.d(R,{Z:()=>jt});var P=f(15861),T=f(17626),j=f(14517),he=f(986),$=f(80542),k=f(8314),S=f(62208),_=f(10699),w=f(77712),q=(f(85931),f(90912),f(76898)),ce=f(65234),F=f(65401),ue=f(25748),x=f(91179),G=f(32442),g=f(11519),y=f(74618),b=f(37053);function z(o,e,t){if(Array.isArray(o)){const s=o[0];if(s>e){const i=(0,y.XZ)(s,e);o[0]=s+i*(-2*e)}else if(s<t){const i=(0,y.XZ)(s,t);o[0]=s+i*(-2*t)}}else{const s=o.x;if(s>e){const i=(0,y.XZ)(s,e);o.x+=i*(-2*e)}else if(s<t){const i=(0,y.XZ)(s,t);o.x+=i*(-2*t)}}return o}function U(o,e){const[t,s]=e.valid,i=2*s;let r,n=0;return o>s?(r=Math.ceil(Math.abs(o-s)/i),o-=r*i,n=r):o<t&&(r=Math.ceil(Math.abs(o-t)/i),o+=r*i,n=-r),{x:o,frameId:n}}function I(o,e){const{xmin:t,ymin:s,xmax:i,ymax:r}=e;return te(o,t,s)&&te(o,t,r)&&te(o,i,r)&&te(o,i,s)}function te(o,e,t){return e>=o.xmin&&e<=o.xmax&&t>=o.ymin&&t<=o.ymax}class Ue{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let n=0;n<i;n++){const a=s[n];if(a&&a.length>=this.minPts){const d=[];for(const c of a)d.push([c[0]+r,c[1]]);s.push(d)}}return this.closed?e.rings=s:e.paths=s,e}}const De=(0,F.Ue)();var se=f(82959),fe=f(35909),me=f(8080),E=f(39351);const v=-1;class Ne{constructor(){this._dirties=[{vertexFrom:v,vertexCount:v,indexFrom:v,indexCount:v,allDirty:!1},{vertexFrom:v,vertexCount:v,indexFrom:v,indexCount:v,allDirty:!1},{vertexFrom:v,vertexCount:v,indexFrom:v,indexCount:v,allDirty:!1},{vertexFrom:v,vertexCount:v,indexFrom:v,indexCount:v,allDirty:!1},{vertexFrom:v,vertexCount:v,indexFrom:v,indexCount:v,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==v||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=v,e.indexCount=v,e.vertexFrom=v,e.vertexCount=v,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:a}=this._dirties[t],d={};let c,h=!1;(a||n!==v&&r>0)&&(d.geometry={count:r,from:n,allDirty:a},h=!0),(a||i!==v&&s>0)&&(c={count:s,from:i,allDirty:a},h=!0),h&&e({indices:c,vertices:d},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==v){const a=Math.min(i.indexFrom,r),d=Math.max(i.indexFrom+i.indexCount,r+n)-a;i.indexFrom=a,i.indexCount=d}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,a=i;if(!r.allDirty)if(r.vertexCount!==v){const d=Math.min(r.vertexFrom,n),c=Math.max(r.vertexFrom+r.vertexCount,n+a)-d;r.vertexFrom=d,r.vertexCount=c}else r.vertexFrom=n,r.vertexCount=a}}class rt{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const d=null!==n?n.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=d?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class N{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new rt(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const r=null!==t.prev?this._freeHead:t.next;N._removeRange(t),this._freeHead=r}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const n=r.from,a=r.count;N._fuse(r,i),N._removeRange(i),this._bookKeeper.rangeResized(r,n,a),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const n=s.from,a=s.count;N._fuse(s,r),N._removeRange(r),this._bookKeeper.rangeResized(s,n,a),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var M=f(64288);const pe=["FILL","LINE","MARKER","TEXT","LABEL"];class Ce{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new N(i):null,idxFreeList:i?new N(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const n in e[r])this._freeListsAndStorage[r].vertexBuffers[n]={data:i?(0,M.C$)(i,e[r][n]):null,stride:e[r][n]}}}static fromTileData(e,t){const s=function nt(o){const e=o.getStrides(),t={};for(let s=0;s<e.length;s++)t[pe[s]]=e[s];return t}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const d of n)for(const c of d.displayRecords)i[c.geometryType]=Math.max(i[c.geometryType],c.vertexFrom+c.vertexCount),r[c.geometryType]=Math.max(r[c.geometryType],c.indexFrom+c.indexCount);const a=new Ce(s,e.tileDisplayData.displayList,t,null);for(let d=0;d<e.tileBufferData.geometries.length;++d){const c=i[d],h=r[d],l=e.tileBufferData.geometries[d],m=a._storageFor(pe[d]),p=e.tileBufferData.geometries[d].indexBuffer;let D;m.indexBuffer=p,m.idxFreeList=new N(p.length),m.idxFreeList.allocate(h);for(const L in l.vertexBuffer){const O=e.tileBufferData.geometries[d].vertexBuffer[L];m.vertexBuffers[L].data=O.data,m.vertexBuffers[L].stride=O.stride;const Q=(0,M.Y8)(O.stride),J=O.data.length*Q/O.stride;D||(D=J)}m.vtxFreeList=new N(D),m.vtxFreeList.allocate(c)}return a}delete(e){const t=pe[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=pe[e.geometryType];let a,d;e.meshData=null,void 0===e.vertexFrom?(d=t.vertexCount,a=this._allocateVertices(n,d)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),d=t.vertexCount,a=this._allocateVertices(n,d)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,d=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,d=t.vertexCount);let c,h,l,u=!0;if(void 0===e.indexFrom?(c=r,l=t.indexCount,h=this._allocateIndices(n,l)):t.indexCount>e.indexCount?(c=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),l=t.indexCount,h=this._allocateIndices(n,l)):t.indexCount===e.indexCount?(u=!1,h=e.indexFrom,l=e.indexCount):(c=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),h=e.indexFrom,l=t.indexCount),-1!==a&&-1!==h){const m=this._storageFor(n);if((0,M.wO)(a,h,m.vertexBuffers,m.indexBuffer,t,s,i),e.vertexFrom=a,e.indexFrom=h,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const p in s)this._dirtyMap.markDirtyVertices(e.geometryType,p,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,c),!0}return-1!==a&&this._freeVertices(n,a,d),-1!==h&&this._freeIndices(n,h,l),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=pe[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const a=this._allocateIndices(r,e.indexCount);if(-1===a)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,a,e.indexCount),!1;const d=this._storageFor(r);if((0,M.wO)(n,a,d.vertexBuffers,d.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const c in s)this._dirtyMap.markDirtyVertices(e.geometryType,c,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var We=f(83994),ot=f(67969),at=f(49353);class lt{constructor(e){this.geometryMap=(0,M.Mk)(()=>({indexBuffer:We.f.createIndex(e,ot.l1.STATIC_DRAW),vao:null}),(t,s)=>({vertexBuffer:We.f.createVertex(e,M.mR[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const s in t.buffers)t.buffers[s]&&t.buffers[s].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(s,i,r){if(!t.data.vao){const n={};for(const a in t.buffers)n[a]=t.buffers[a].data.vertexBuffer;t.data.vao=new at.U(s,r,i,n,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((s,i)=>{this._upload(s,i,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const r in i){const n=i[r];n.allDirty?this._uploadVertices(s,t,r):null!=n.from&&null!=n.count&&this._uploadVertices(s,t,r,n.from,n.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const a=e.geometries[t].vertexBuffer[s];if(!a)return;const d=a.stride,c=a.data.buffer;n.buffers[s]&&c.byteLength>0&&(null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(c,i*d,i*d,(i+r)*d):n.buffers[s].data.vertexBuffer.setData(c))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const a=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&a.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(a,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(a))}}var dt=f(29443);class ht extends dt.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new Ne}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new Ne,this._dispRecStore=Ce.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new lt(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=Ce.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const n=this._data.tileDisplayData.displayObjectRegistry.get(r);if(n){this._data.tileDisplayData.displayList.removeFromList(n.displayRecords);for(const d of n.displayRecords)this._dispRecStore.delete(d);this._data.tileDisplayData.displayObjectRegistry.delete(r);const a=this._data.tileDisplayData.displayObjects.indexOf(n);this._data.tileDisplayData.displayObjects.splice(a,1)}}for(const r of s){let n,a=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(a){const c=a.displayRecords;a.set(r),a.displayRecords=c;const h=a.displayRecords.length;for(let l=0;l<h;++l){const u=a.displayRecords[l],m=r.displayRecords[l];(l>=r.displayRecords.length||u.geometryType!==m.geometryType||u.symbolLevel!==m.symbolLevel||u.zOrder!==m.zOrder||u.materialKey!==m.materialKey)&&(this._dispRecStore.delete(a.displayRecords[l]),l<r.displayRecords.length&&(a.displayRecords[l]=void 0))}a.displayRecords.length=r.displayRecords.length}else{let c;a=r.copy(),a.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,a);const h=this._data.tileDisplayData.displayObjects;if(null!=a.insertAfter)if(n={},a.insertAfter>=0){const l=this._data.tileDisplayData.displayObjectRegistry.get(a.insertAfter);l?(c=h.indexOf(l)+1,c<h.length?h.splice(c,0,a):(h.push(a),c=h.length)):(h.push(a),c=h.length)}else h.unshift(a),c=0;else h.push(a),c=h.length;if(n){const l=r.displayRecords.length>0?1:0;let u=0;for(let m=c-1;m>=0&&u<l;--m)for(let p=h[m].displayRecords.length-1;p>=0&&u<l;--p){const D=h[m].displayRecords[p],L=this._data.tileDisplayData.displayList.getDPInfoType();n[L]||(n[L]=D,++u)}}}const d=r.displayRecords.length;for(let c=0;c<d;++c){const h=r.displayRecords[c];let l=a.displayRecords[c];l?(l.meshData=h.meshData,l.materialKey=h.materialKey):(l=h.copy(),l.vertexFrom=void 0,l.indexFrom=void 0,a.displayRecords[c]=l);const u=h.geometryType,m=this._data.tileDisplayData.displayList.getDPInfoType(),p=e.addOrUpdate.tileBufferData.geometries[u],D=p.vertexBuffer,L=p.indexBuffer;let O;n&&(O=n[m]?this._data.tileDisplayData.displayList.splitAfter(n[m]):-1),t=this._dispRecStore.setMeshData(l,h,D,L,O)&&t,n&&null!=l.indexFrom&&null!=l.indexFrom&&(n[m]=l)}}return t}}class Xe{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class ie{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new ie;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const r in s.vertexBuffer){const{data:n,stride:a}=s.vertexBuffer[r];i.vertexBuffer[r]={data:n.slice(),stride:a}}}return e}static deserialize(e){const t=new ie;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,M.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var W=f(39406);function Be(o,e,t,...s){e<o.length?o.splice(e,t,...s):o.push(...s)}const Ge=new Map;Ge.set(W.jx.MAP,[W.LW.FILL,W.LW.LINE,W.LW.MARKER,W.LW.TEXT]),Ge.set(W.jx.LABEL,[W.LW.LABEL]),Ge.set(W.jx.LABEL_ALPHA,[W.LW.LABEL]);class Ve{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const n=r.geometryDPInfo.unified;if(n)for(const a of n){const d=e.painter.getGeometryBrush(a.geometryType),c=t.getGeometry(a.geometryType),h={geometryType:a.geometryType,materialKey:a.materialKey,indexFrom:a.indexFrom,indexCount:a.indexCount,target:c};d.prepareState(e,t),d.drawGeometry(e,t,h,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new Ve;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const a=new ye;a.geometryType=n.geometryType,a.materialKey=n.materialKey,a.indexFrom=i,a.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,a),n.indexCount=i-n.indexFrom}return r}}}_addToList(e,t){const r=this._getDisplayList(e.symbolLevel,e.zOrder),n=null!=t?t:r.length-1,a=n>=0&&n<r.length?r[n]:null;if(null!==a&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{const d=new ye;d.indexFrom=e.indexFrom,d.indexCount=e.indexCount,d.materialKey=e.materialKey,d.geometryType=e.geometryType,Be(r,n+1,0,d)}}_removeFromList(e){const i=this._getDisplayList(e.symbolLevel,e.zOrder),r=i.length;let n;for(let a=0;a<r;++a){const d=i[a];if(e.indexFrom+e.indexCount>d.indexFrom&&e.indexFrom<d.indexFrom+d.indexCount&&d.geometryType===e.geometryType){n=a;break}}if(void 0!==n){const a=i[n];if(e.indexFrom===a.indexFrom)return a.indexCount-=e.indexCount,a.indexFrom+=e.indexCount,0===a.indexCount&&Be(i,n,1),n-1;if(e.indexFrom+e.indexCount===a.indexFrom+a.indexCount)return a.indexCount-=e.indexCount,0===a.indexCount?(Be(i,n,1),n-1):n;{const d=a.indexFrom,c=e.indexFrom-a.indexFrom,h=e.indexCount,l=a.indexFrom+a.indexCount-(e.indexFrom+e.indexCount);a.indexCount=c;const u=new ye;return u.geometryType=a.geometryType,u.materialKey=a.materialKey,u.indexFrom=d+c+h,u.indexCount=l,Be(i,n+1,0,u),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let a=0;a<i;a++)if(this.symbolLevels[a].symbolLevel===e){s=this.symbolLevels[a];break}let r;s||(s=new je,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let a=0;a<n;a++)if(s.zLevels[a].zLevel===t){r=s.zLevels[a];break}return r||(r=new Pe,r.geometryDPInfo=new Te,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class ye{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new ye;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Te{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Te;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}}class Pe{constructor(){this.geometryDPInfo=new Te}clone(){const e=new Pe;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class je{constructor(){this.zLevels=[]}clone(){const e=new je;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class Ye{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class re{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new re(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Ye;for(const r in t){const n=t[r].stride,a=t[r].data,d=[],c=(0,M.Y8)(n);for(let h=0;h<n*e.vertexCount/c;++h)d[h]=a[h+n*e.vertexFrom/c];i.vertexData.set(r,d)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Ye;for(const s in e){const i=e[s].stride,r=e[s].data,n=[],a=(0,M.Y8)(i);for(let d=0;d<i*this.vertexCount/a;++d)n[d]=r[d+i*this.vertexFrom/a];this.meshData.vertexData.set(s,n)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const r in t){const n=t[r].stride,a=this.meshData.vertexData.get(r),d=t[r].data,c=(0,M.Y8)(n);for(let h=0;h<n*this.meshData.vertexCount/c;++h)d[h+n*e/c]=a[h]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new re(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function Je(o,e){if(null!==e){o.push(e.length);for(const t of e)t.serialize(o);return o}o.push(0)}class ne{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new ne(this.id);return e.set(this),e}clone(){const e=new ne(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),Je(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new ne(t);return s.displayRecords=function ct(o,e,t){const s=o.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=e.deserialize(o,t);return i}(e,re,{id:t}),s}}class ge{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new Ve;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new ge;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return Je(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const n=ne.deserialize(e);s[r]=n,i.set(n.id,n)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new ge;return t._deserializeObjects(e),t}}var ft=f(37633);class oe{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,M.e2)(e.data,e.stride);return new oe(t,e.stride)}static fromVertexVector(e){const t=(0,M.e2)(e.data.buffer(),e.stride);return new oe(t,e.stride)}}class ae{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=oe.decode(e.namedBuffers[r]);return new ae(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,M.e2)(e.vertices,e.stride),n={geometry:new oe(i,e.stride)};return new ae(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=oe.fromVertexVector(e.namedVectors[r]);return new ae(t,s,i)}}var Fe=f(75734);class mt{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const t=this.data.length/(this.stride/4);return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class pt{constructor(e,t,s){this.geometryType=e,this.indexVector=new Fe.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,M.$_)(e,s);for(const r in i){const n=i[r];let a;switch(n%4){case 0:case 2:a=new Fe.Z(Uint32Array,n*t);break;case 1:case 3:a=new Fe.Z(Uint8Array,n*t)}this.namedVectors[r]=new mt(a,n)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const n=this.namedVectors[r];i[r]={},n.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=ae.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const Ie=new Xe,le=new Xe;function gt(o,e){const t={};for(const s in o){const i={data:(0,M.C$)(e,o[s]),stride:o[s]};t[s]=i}return t}class H{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){Ie.reset();const e=function ut(o){const e=[[],[],[],[],[]],t=o;for(const s of t)for(const i of s.displayRecords)e[i.geometryType].push(i);return e}(this.tileDisplayData.displayObjects);for(const i of e)for(const r of i)r&&Ie.needMore(r.geometryType,r.meshData?r.meshData.vertexCount:r.vertexCount,r.meshData?r.meshData.indexData.length:r.indexCount);const t=e.length,s=new ie;for(let i=0;i<t;++i){s.geometries[i].indexBuffer=new Uint32Array(Math.round(1.5*Ie.indicesFor(i)));const r=[];for(const c in this.tileBufferData.geometries[i].vertexBuffer)r.push(this.tileBufferData.geometries[i].vertexBuffer[c].stride);const n=H._computeVertexAlignment(r),a=Math.round(1.5*Ie.verticesFor(i)),d=H._align(a,n);for(const c in this.tileBufferData.geometries[i].vertexBuffer){const h=this.tileBufferData.geometries[i].vertexBuffer[c].stride;s.geometries[i].vertexBuffer[c]={stride:h,data:(0,M.C$)(d,h)}}}le.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const r=e[i];for(const n of r){if(n.meshData)n.writeMeshDataToBuffers(le.verticesFor(i),s.geometries[i].vertexBuffer,le.indicesFor(i),s.geometries[i].indexBuffer),n.meshData=null;else{const a=this.tileBufferData.geometries[i].vertexBuffer,d=this.tileBufferData.geometries[i].indexBuffer,c=s.geometries[i].vertexBuffer,h=s.geometries[i].indexBuffer,l=le.verticesFor(i),u=le.indicesFor(i);(0,M.wO)(l,u,c,h,n,a,d),n.vertexFrom=l,n.indexFrom=u}le.needMore(i,n.vertexCount,n.indexCount)}}for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new H;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let r=0;for(let n=0;n<t;n++)r=Math.max(r,e[n].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new Fe.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,M.Z_)(r=>{const n=e.data[r];if((0,S.pC)(n)){const a=ft.$.from(n.records).getCursor();for(;a.next();){const d=a.id,c=a.materialKey,h=a.indexFrom,l=a.indexCount,u=a.vertexFrom,m=a.vertexCount,p=i.get(d),D=new re(d,r,c);D.indexFrom=h,D.indexCount=l,D.vertexFrom=u,D.vertexCount=m,p.displayRecords.push(D)}s[r]=ae.fromVertexData(n,r)}else s[r]=new pt(r,0,{fill:"default"}).intoBuffers()}),H.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new H,s=new ge,i=new ie;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const n=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=n.indexBuffer,i.geometries[r].vertexBuffer=n.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new H;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new H;s.tileDisplayData=new ge,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const c of e)for(const h of c.displayRecords)n[h.geometryType].push(h),i[h.geometryType]+=h.meshData.vertexCount,r[h.geometryType]+=h.meshData.indexData.length;const a=new ie,d=function xt(o){return[o.fill||{},o.line||{},o.icon||{},o.text||{},o.label||{}]}(t);for(let c=0;c<5;c++){const h=new Uint32Array(r[c]),l=gt(d[c],i[c]);re.writeAllMeshDataToBuffers(n[c],l,h),a.geometries[c]={indexBuffer:h,vertexBuffer:l}}return s.tileBufferData=a,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var vt=f(55130),_t=f(246),bt=f(1825),Dt=f(32940),$e=f(49391),Ct=f(36682),Bt=f(93872),xe=f(82054),Tt=f(25208),Ft=f(64822);class Se extends Ft.i{constructor(e,t){super(e,t,null)}static from(e){const t=Tt.s.createInstance(),s=[],i=e.filter(r=>!!r.geometry);for(const r of i){const n=(0,x.Ji)(r.geometry);(0,xe.E7)(s,[r],n,!1,!1,"uid")}return new Se(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Se(this.instance,this._features);return this.copyInto(e),e}}var Me=f(23841),It=f(76279),St=f(13924),Mt=f(89932),Rt=f(27105),Re=f(7848),ke=f(88071),C=f(64596);const ve=new ke.Z,Ze=new ke.Z,qe="esriGeometryPolyline";function et(o){o.coords.length=0,o.lengths.length=0}class X{constructor(){this.bounds=(0,F.Ue)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===X._pool.length?n=new X:(n=X._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,x.oU)(e.geometry)){const s=e.symbol;if((0,S.Wi)(s))return null;if((0,C.yA)(s.type)||(0,C.ab)(s.type)){const i=(0,Rt.tO)(e.geometry);return(0,Re.RF)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry;if((0,x.oU)(r)){const n=r.rings;if(1===n.length&&2===n[0].length)return(0,Re.ym)(e,{paths:[[n[0][0],n[0][1]]]})}else{if((0,x.l9)(r))return et(ve),et(Ze),(0,xe.u0)(ve,r),(0,xe.zj)(Ze,ve,r.hasZ,r.hasM,qe,e.scale[0]),(0,xe.Nh)(ve,Ze,r.hasZ,r.hasM,qe,e),(0,xe.J6)(ve,r.hasZ,r.hasM);if((0,x.aW)(r)){const n=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),[a,d]=(0,y.uS)(s),c=d-a,h=r.points.filter(l=>{if(l[0]+n>d||l[0]-n<a){const u=[...l];return l[0]+n>d?u[0]-=c:u[0]+=c,(0,F.Zm)(t,l,n)||(0,F.Zm)(t,u,n)}return(0,F.Zm)(t,l,n)});return 0===h.length?{points:h}:(0,Re.ym)(e,{points:h})}}return(0,Re.ym)(e,this.geometry)}}X._pool=[],X._set=new Set;const _e={minX:0,minY:0,maxX:0,maxY:0},de=(0,F.Ue)();function we(o,e,t,s,i){return _e.minX=e,_e.minY=t,_e.maxX=s,_e.maxY=i,o.search(_e)}function wt(o){return{minX:o.bounds[0],minY:o.bounds[1],maxX:o.bounds[2],maxY:o.bounds[3]}}class Lt{constructor(e,t,s,i,r,n,a){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=a,this._index=(0,It.r)(9,wt),this._itemByGraphic=new Map,this._inflatedSizeHelper=new fe.IV,this._tileInfoView=e,this._uidFieldName=s;const d=e.getClosestInfoForScale(t);d&&(this._resolution=this._tileInfoView.getTileResolution(d.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new Mt.Tu(e)}hitTest(e,t,s,i,r){e=(0,St.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;de[0]=e-n,de[1]=t-n,de[2]=e+n,de[3]=t+n;const a=.5*i*(s+C.y1),d=we(this._index,e-a,t-a,e+a,t+a);if(!d||0===d.length)return[];const c=[],h=(0,F.Ue)(),l=(0,F.Ue)();for(const p of d){const{geometry:D,symbolResource:L}=p;this._getSymbolBounds(h,L,D,l,r),l[3]=l[2]=l[1]=l[0]=0,(0,F.kK)(h,de)&&p.graphic.visible&&c.push(p)}if(0===c.length)return[];const u=this._hittestDrawHelper,m=[];for(const p of c){const{geometry:D,symbolResource:L}=p,{hash:O,textInfo:Q}=L,J=this._hashToCIM.get(O);J&&u.hitTest(de,J.symbol,D,Q,r,i)&&m.push(p)}return m.sort(At),m.map(p=>p.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((l,u)=>l.zorder-u.zorder),i[0].insertAfter=-1;for(let l=1;l<i.length;l++)i[l].insertAfter=i[l-1].graphic.uid;i.sort((l,u)=>l.graphic.uid-u.graphic.uid),s.sort((l,u)=>l.uid-u.uid);let r,n=0,a=0;const d=t.resolution,c=[],h={originPosition:"upperLeft",scale:[d,d],translate:[t.bounds[0],t.bounds[3]]};for(const l of s){for(a=-2;n<i.length;)if(r=i[n],n++,l.uid===r.graphic.uid){a=r.insertAfter;break}if(!r.geometry||-2===a)continue;const u=r.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,d),m=Ee({},r.graphic.attributes);m[this._uidFieldName]=l.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),c.push({centroid:X.getCentroidQuantized(r,h),geometry:u,attributes:m,symbol:r.symbol,groupId:r.groupId,insertAfter:a,zorder:r.zorder})}return c.sort((l,u)=>l.zorder-u.zorder),c}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter(e=>e.graphic.visible).map(e=>e.bounds)}addOrModify(e,t,s){if(!e||(0,S.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=X.acquire(e,t,s,(0,S.pC)(r)?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,F.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return(0,S.pC)(n)&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const n=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,S.pC)(n)&&(r.bounds=n,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,a=this._tileInfoView.spatialReference,{bounds:d,resolution:c}=r;let h,l,u,m;s.sort((p,D)=>p.zorder-D.zorder);for(let p=0;p<s.length;p++){u=s[p],h=u.graphic,l=u.getGeometryQuantized(i,d,a,c),m=0===p?-1:s[p-1].graphic.uid;const D=Ee({},u.graphic.attributes);D[n]=h.uid,null==u.groupId&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:X.getCentroidQuantized(u,i),geometry:l,attributes:D,symbol:u.symbol,groupId:u.groupId,insertAfter:m,zorder:u.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,y.uS)(t),n=Math.abs(s[2]-r)<1e-5,a=Math.abs(s[0]-i)<1e-5;if((!n||!a)&&(n||a)){const d=e.resolution;let c;c=(0,F.Ue)(n?[i,s[1],i+d*C.y1,s[3]]:[r-d*C.y1,s[1],r,s[3]]);const h=we(this._index,s[0],s[1],s[2],s[3]),l=we(this._index,c[0],c[1],c[2],c[3]);return[...new Set([...h,...l])]}}return we(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,F.Ue)()),(0,G.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:d,textInfo:c}=t,h=this._hashToCIM.get(d);if(!h)return null;i||(i=[0,0,0,0]);const l=this._inflatedSizeHelper.getSymbolInflateSize(i,h.symbol,this._cimResourceManager,r,c);i[0]=(0,Me.F2)(l[0]),i[1]=(0,Me.F2)(l[1]),i[2]=(0,Me.F2)(l[2]),i[3]=(0,Me.F2)(l[3])}const n=this._resolution,a=fe.IV.safeSize(i);return e[0]-=a*n,e[1]-=a*n,e[2]+=a*n,e[3]+=a*n,e}}const At=(o,e)=>{const t=(0,C.eT)(o.graphic),s=(0,C.eT)(e.graphic);return t===s?e.zorder-o.zorder:t-s};var zt=f(11263),Ut=f(61996);const Ot=o=>{let e=class extends((0,Ut.I)(o)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,T._)([(0,w.Cb)()],e.prototype,"graphics",void 0),(0,T._)([(0,w.Cb)()],e.prototype,"renderer",void 0),(0,T._)([(0,w.Cb)()],e.prototype,"updating",void 0),(0,T._)([(0,w.Cb)()],e.prototype,"view",void 0),e=(0,T._)([(0,q.j)("esri.views.layers.GraphicsView")],e),e};var Gt=f(31637),Vt=f(3250);const Pt=(0,k.Z)("esri-2d-graphic-debug");function Ke(o,e,t){if(t.has(o))return t.get(o);const s={tile:e,addedOrModified:[],removed:[]};return t.set(o,s),s}let Y=class extends(Ot((0,$.p)(j.Z))){constructor(o){super(o),this._storage=new Bt.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(o,e,t){if(o){const s=(0,$e.MD)({indexCount:0,fields:{}},"feature",o);this._matcher=(0,Dt.fL)(s,e,null,t)}}_createDisplayId(o){return this._displayIds.has(o)||this._displayIds.set(o,this._storage.createDisplayId()),this._displayIds.get(o)}initialize(){this._attributeStore=new Ct.Z({type:"local",initialize:i=>Promise.resolve(this.container.attributeView.initialize(i)),update:i=>this.container.attributeView.requestUpdate(i),render:()=>this.container.requestRender()},(0,Gt.Y)()),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const t=new bt.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new Lt(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,i=>{this._createDisplayId(i.uid),this._setFilterState(i.uid,i.visible)},i=>{const r=this._displayIds.get(i.uid);this._displayIds.delete(i.uid),this._storage.releaseDisplayId(r)},this._hashToCIM),this._meshFactory=new _t.j(null,this.uid,t),this._templateStore=t,this.handles.add([this.watch("renderer",i=>{this._createMatcher(i,t,this.container.stage.resourceManager);for(const r of this.graphics)this._pendingUpdate.updated.add(r);this.requestUpdate()}),this.view.graphicsTileStore.on("update",i=>this._onTileUpdate(i)),this.container.on("attach",()=>{Pt&&this.container.enableRenderingBounds(()=>this._graphicStore.getAllBounds()),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",r=>this._graphicsChangeHandler(r)),"graphics");const i=this.container.stage.resourceManager;this._createMatcher(this.renderer,t,i),this._graphicStore.setResourceManager(i),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(o){if(!this.view||!this.view.position)return null;const{resolution:e,rotation:t}=this.view.state;return this._graphicStore.hitTest(o.x,o.y,2,e,t)}update(o){(0,_.k_)(this._controller.signal);const e=o.state,{resolution:t}=e;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(o){this.updateRequested&&(this.updateRequested=!1,this.update(o))}graphicUpdateHandler(o){const{graphic:e,property:t,newValue:s}=o;switch(t){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,s),this._attributeStore.sendUpdates()}}setHighlight(o){const e=o.map(t=>this._displayIds.get(t));this._attributeStore.setHighlight(o,e)}_getIntersectingTiles(o){const e=this._graphicStore.getBounds(o);if(!e||0===(0,F.bf)(e)||0===(0,F.Cb)(e))return[];const t=(0,C.Zu)(e,this.view.spatialReference);return(0,S.pC)(t)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(o){var e=this;return(0,P.Z)(function*(){(0,_.k_)(e._controller.signal);const t=o.tile,s=e._getGraphicsData(e._templateStore,t,o.addedOrModified),i=yield e._processGraphics(t,s);return(0,_.k_)(e._controller.signal),e._patchTile(t.key,{type:"update",addOrUpdate:i,remove:o.removed,end:!0,clear:!1,sort:!1}),i})()}_patchTile(o,e){if(!this._tiles.has(o))return;const t=this._tiles.get(o);this.container.onTileData(t,e),this.container.requestRender()}_graphicsChangeHandler(o){const e=this._pendingUpdate;for(const t of o.added)e.added.add(t);for(const t of o.moved)e.updated.add(t);for(const t of o.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const o={added:[],removed:[],updated:[]};if(!this.graphics)return o;const e=this._pendingUpdate;for(const t of this.graphics.items)e.added.has(t)?o.added.push(t):e.updated.has(t)&&o.updated.push(t);for(const t of e.removed)this._graphicStore.has(t)&&o.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),o}_updateGraphics(){var o=this;return(0,P.Z)(function*(){o._processing=!0;const{added:e,removed:t,updated:s}=o._getGraphicsToUpdate(),i=o._tilesToUpdate;let r;try{if(!o._graphicStoreUpdate){const l=o.view.state,{resolution:u}=l;o._graphicStore.updateLevel(u)}const n=[],a=new Array(e.length+t.length);for(let l=0;l<s.length;l++){const u=s[l],m=o._getIntersectingTiles(u);for(const p of m)r=p.id,Ke(r,p,i).removed.push(o._displayIds.get(u.uid));n.push(o._updateGraphic(u,null)),a[l]=u}const d=s.length;for(let l=0;l<e.length;l++){const u=e[l];a[d+l]=u,o._graphicsSet.add(u),n.push(o._addGraphic(u))}for(const l of t){o._abortProcessingGraphic(l.uid);const u=o._getIntersectingTiles(l);for(const m of u)r=m.id,Ke(r,m,i).removed.push(o._displayIds.get(l.uid));o._graphicsSet.delete(l),o._graphicStore.remove(l)}let c;o._flipUpdatingGraphics(),yield Promise.all(n);for(let l=0;l<a.length;l++){c=a[l];const u=o._getIntersectingTiles(c);for(const m of u)r=m.id,Ke(r,m,i).addedOrModified.push(c)}o._graphicStore.updateZ();const h=[];for(const[l,u]of i)h.push(o._updateTile(u));yield Promise.all(h)}catch(n){(0,_.D_)(n)}for(const n of t)try{const a=yield o._getSymbolForGraphic(n,{});if(a){const d=a.hash();o._hashToExpandedSymbol.delete(d)}}catch(a){(0,_.D_)(a)}i.clear(),o.notifyChange("updating"),o._processing=!1,o._needsProcessing&&(o._needsProcessing=!1,o._updateGraphics())})()}_getArcadeInfo(o){const e=(o.attributes?Object.keys(o.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof o.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return(0,S.Wi)(o.geometry)?null:{geometryType:(0,x.Ji)(o.geometry),spatialReference:ce.Z.fromJSON(o.geometry.spatialReference),fields:e}}_getSymbolForGraphic(o,e){return(0,_.k_)(this._controller.signal),(0,S.pC)(o.symbol)?Promise.resolve(o.symbol):(0,S.pC)(this.renderer)?this.renderer.getSymbolAsync(o,{scale:this.view.scale,abortOptions:e}):Promise.resolve(this._getNullSymbol(o))}_getCIMSymbol(o,e,t){let s=this._hashToCIM.get(e);if(s)return Promise.resolve(s);const i=(0,fe.rW)(o);if((0,S.pC)(i)){if("CIMSymbolReference"===i.type)return s=i,this._hashToCIM.set(e,s),Promise.resolve(s);let r=this._hashToCIMSymbolPromise.get(e);return r||(r=i.fetchCIMSymbol(t).then(n=>(this._hashToCIM.set(e,n.data),this._hashToCIMSymbolPromise.delete(e),n)).catch(n=>(this._hashToCIMSymbolPromise.delete(e),(0,_.r9)(n),null)),this._hashToCIMSymbolPromise.set(e,r),r)}return Promise.resolve(null)}_expandCIMSymbol(o,e,t,s){const i=this._hashToExpandedSymbol.get(t);if(i)return Promise.resolve(i);let r=this._hashToExpandedSymbolPromise.get(t);if(r)return r;const n=this.container.stage,a=this._getArcadeInfo(e),d=(0,$e.q5)(null),c=(0,Vt.createSymbolSchema)(o,d);return r=(0,zt.B3)(c,a,n.resourceManager,s),this._hashToExpandedSymbolPromise.set(t,r),r.then(h=>(this._hashToExpandedSymbol.set(t,h),this._hashToExpandedSymbolPromise.delete(t),h)),r}_getSymbolResources(o,e){var t=this;return(0,P.Z)(function*(){return(0,_.k_)(t._controller.signal),t.container.stage?t._getSymbolForGraphic(o,e).then(s=>{const i=s.hash();return t._getCIMSymbol(s,i,e).then(r=>(0,S.Wi)(r)?null:t._expandCIMSymbol(r,o,i,e).then(n=>{const a=n.layers.filter(d=>"text"===d.type&&"string"==typeof d.text);if(a&&a.length>0){const d=new Array(a.length);for(let h=0;h<a.length;h++){const l=a[h],u=[],[m]=(0,he.E)(l.text);for(let p=0;p<m.length;p++)u.push(m.charCodeAt(p));d[h]={symbol:l,id:h,glyphIds:u}}const c=new Map;return t.container.getMaterialItems(d).then(h=>{for(let l=0;l<a.length;l++){const u=a[l];c.set(u.cim,{text:u.text,mosaicItem:h[l].mosaicItem})}return{symbol:n,textInfo:c,hash:i}})}return{symbol:n,hash:i}}))}).catch(s=>((0,_.r9)(s),null)):null})()}_projectAndNormalizeGeometry(o,e){var t=this;return(0,P.Z)(function*(){if((0,_.k_)(t._controller.signal),(0,S.Wi)(o.geometry)||"mesh"===o.geometry.type)return null;let s=o.geometry;if((0,x.oU)(s))s.rings=s.rings;else if((0,x.l9)(s))s.paths=s.paths;else if((0,x.YX)(s)){const n=yield t._getSymbolForGraphic(o,e);(0,_.k_)(t._controller.signal),s=(0,C.yA)(n.type)||(0,C.ab)(n.type)?s.center:(0,C.XA)(s)}yield(0,se._W)(s.spatialReference,t.view.spatialReference);const i=function V(o){if(!o)return null;let e=null;const t=o.spatialReference,s=(0,b.C5)(t);if(!s)return"toJSON"in o?o.toJSON():o;const i=(0,b.sS)(t)?102100:4326,r=y.UZ[i].maxX,n=y.UZ[i].minX,a=y.UZ[i].plus180Line,d=y.UZ[i].minus180Line;let c;const h="toJSON"in o?o.toJSON():o;if((0,x.wp)(h))c=z(h,r,n);else if((0,x.aW)(h))h.points=h.points.map(l=>z(l,r,n)),c=h;else if((0,x.YX)(h))c=function A(o,e){if(!e)return o;const t=function B(o,e){const t=[],{ymin:s,ymax:i}=o,r=o.xmax-o.xmin,n=o.xmin,a=o.xmax;let d;const[c,h]=e.valid;d=U(o.xmin,e);const l=d.x,u=d.frameId;d=U(o.xmax,e);const m=d.x,p=d.frameId,D=l===m&&r>0;if(r>2*h){const L={xmin:n<a?l:m,ymin:s,xmax:h,ymax:i},O={xmin:c,ymin:s,xmax:n<a?m:l,ymax:i},Q={xmin:0,ymin:s,xmax:h,ymax:i},J={xmin:c,ymin:s,xmax:0,ymax:i},Le=[],Ae=[];I(L,Q)&&Le.push(u),I(L,J)&&Ae.push(u),I(O,Q)&&Le.push(p),I(O,J)&&Ae.push(p);for(let ze=u+1;ze<p;ze++)Le.push(ze),Ae.push(ze);t.push({extent:L,frameIds:[u]},{extent:O,frameIds:[p]},{extent:Q,frameIds:Le},{extent:J,frameIds:Ae})}else l>m||D?t.push({extent:{xmin:l,ymin:s,xmax:h,ymax:i},frameIds:[u]},{extent:{xmin:c,ymin:s,xmax:m,ymax:i},frameIds:[p]}):t.push({extent:{xmin:l,ymin:s,xmax:m,ymax:i},frameIds:[u]});return t}(o,e).map(s=>s.extent);return t.length<2?t[0]||o:t.length>2?(o.xmin=e.valid[0],o.xmax=e.valid[1],o):{rings:t.map(s=>[[s.xmin,s.ymin],[s.xmin,s.ymax],[s.xmax,s.ymax],[s.xmax,s.ymin],[s.xmin,s.ymin]])}}(h,s);else if((0,x.oU)(h)||(0,x.l9)(h)){const l=De;(0,G.$P)(l,h);const u={xmin:l[0],ymin:l[1],xmax:l[2],ymax:l[3]},m=(0,y.XZ)(u.xmin,n)*(2*r),p=0===m?h:function ee(o,e){const t=(0,y.x3)(o);for(const s of t)for(const i of s)i[0]+=e;return o}(h,m);u.xmin+=m,u.xmax+=m,(0,g.jQ)(u,a)&&u.xmax!==r||(0,g.jQ)(u,d)&&u.xmin!==n?e=p:c=p}else c=h;return null!==e?(new Ue).cut(e,r):c}(s),r=(0,se.iV)(i,s.spatialReference,t.view.spatialReference);return(0,ue.pW)(r),r})()}_onTileUpdate(o){const e=(0,b.C5)(this.view.spatialReference);if(o.added&&o.added.length>0)for(const t of o.added)this._addNewTile(t,e);if(o.removed&&o.removed.length>0)for(const t of o.removed)this._removeTile(t.key)}_addGraphic(o){var e=this;return(0,P.Z)(function*(){e._abortProcessingGraphic(o.uid),(0,_.k_)(e._controller.signal);const t=new AbortController;e._graphicIdToAbortController.set(o.uid,t);const s={signal:t.signal};try{yield e._addOrUpdateGraphic(o,s),(0,_.k_)(e._controller.signal),e._graphicIdToAbortController.delete(o.uid)}catch(i){if(e._graphicIdToAbortController.delete(o.uid),!(0,_.D_)(i))throw i}})()}_updateGraphic(o,e){(0,_.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(o,e),s=this._getSymbolResources(o,e);return Promise.all([t,s]).then(([i,r])=>{(0,_.k_)(this._controller.signal),this._graphicStore.addOrModify(o,r,i)})}_addOrUpdateGraphic(o,e){(0,_.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(o,e),s=this._getSymbolResources(o,e);return Promise.all([t,s]).then(([i,r])=>{(0,_.k_)(this._controller.signal),this._graphicsSet.has(o)&&this._graphicStore.addOrModify(o,r,i)})}_addTile(o){const e=this.view.featuresTilingScheme.getTileBounds((0,F.Ue)(),o),t=new ht(o,e[0],e[3]);return this._tiles.set(o,t),this.container.addChild(t),t}_addNewTile(o,e){var t=this;return(0,P.Z)(function*(){const s=t._addTile(o.key),i=t._graphicStore.queryTileData(t._templateStore,o);if(0===i.length)return;if(e){const n=Math.round((e.valid[1]-e.valid[0])/o.resolution);for(const a of i)a.geometry&&((0,x.wp)(a.geometry)||(0,x.aW)(a.geometry))&&t._wrapPoints(a,n)}const r=o.key;t._tileUpdateSet.add(o.key),t.notifyChange("updating");try{const n={type:"update",clear:!1,addOrUpdate:yield t._processGraphics(o,i),remove:[],end:!0,sort:!1};s.patch(n),t._tileUpdateSet.delete(r),t.notifyChange("updating")}catch(n){if(t._tileUpdateSet.delete(r),t.notifyChange("updating"),!(0,_.D_)(n))throw n}})()}_removeTile(o){if(!this._tiles.has(o))return;const e=this._tiles.get(o);this.container.removeChild(e),e.destroy(),this._tiles.delete(o)}_setFilterState(o,e){const t=this._displayIds.get(o),s=this._attributeStore.getHighlightFlag(o);this._attributeStore.setData(t,0,0,s|(e?E.Zd:0))}_getGraphicsData(o,e,t){const i=(0,b.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(o,e,t);if(i){const n=Math.round((i.valid[1]-i.valid[0])/e.resolution);for(const a of r)a.geometry&&((0,x.wp)(a.geometry)||(0,x.aW)(a.geometry))&&this._wrapPoints(a,n)}return r}_wrapPoints(o,e){const t=o.geometry;(0,x.aW)(t)?this._wrapMultipoint(t,e):this._wrapPoint(o,e)}_wrapMultipoint(o,e){const t=o.points,s=[];let i=0,r=0;for(const[n,a]of t){if(s.push([n+i,a]),i=0,e===C.I_){const d=5*C.y1;n+r<d?(s.push([e,0]),i=-e):n+r>C.I_-d&&(s.push([-e,0]),i=e)}else n+r<-C.y1?(s.push([e,0]),i=-e):n+r>C.I_+C.y1&&(s.push([-e,0]),i=e);r+=n}o.points=s}_wrapPoint(o,e){const t=o.geometry;if(e===C.I_){const s=5*C.y1;t.x<s?o.geometry={points:[[t.x,t.y],[e,0]]}:t.x>C.I_-s&&(o.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-C.y1?o.geometry={points:[[t.x,t.y],[e,0]]}:t.x>C.I_+C.y1&&(o.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(o,e,t){if(!e||!e.length||!this._meshFactory)return null;const s=Se.from(e),i=this._meshFactory;return this._matcher.then(r=>i.analyzeGraphics(s,this.container.stage.resourceManager,r,null,null,t).then(()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(o,s))))}_processAnalyzedGraphics(o,e){const t=this._meshFactory,s=e.getSize(),i=e.getCursor(),n=new vt._(o.key.id,{features:s,records:s,metrics:0},{fill:"default"},!1,!1),a=[];for(;i.next();){const l=i.readGraphic();l.insertAfter=-1===l.insertAfter?-1:this._displayIds.get(l.insertAfter),l.displayId=this._displayIds.get(l.attributes[this.uid]);const u=new ne(l.displayId);u.insertAfter=l.insertAfter,a.push(u),t.writeGraphic(n,i,o.level,this.container.stage.resourceManager)}const c=n.serialize(o.tileInfoView.tileInfo.isWrappable);return 1!==c.length?new H:H.fromVertexData(c[0].message,a)}_abortProcessingGraphic(o){this._graphicIdToAbortController.has(o)&&this._graphicIdToAbortController.get(o).abort()}_getNullSymbol(o){const e=o.geometry;return(0,x.l9)(e)?me.mW:(0,x.oU)(e)||(0,x.YX)(e)?me.kD:me.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,T._)([(0,w.Cb)({constructOnly:!0})],Y.prototype,"requestUpdateCallback",void 0),(0,T._)([(0,w.Cb)()],Y.prototype,"container",void 0),(0,T._)([(0,w.Cb)({constructOnly:!0})],Y.prototype,"graphics",void 0),(0,T._)([(0,w.Cb)()],Y.prototype,"updating",null),(0,T._)([(0,w.Cb)()],Y.prototype,"view",void 0),(0,T._)([(0,w.Cb)()],Y.prototype,"updateRequested",void 0),Y=(0,T._)([(0,q.j)("esri.views.2d.layers.support.GraphicsView2D")],Y);const jt=Y}}]);